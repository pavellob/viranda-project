import { useId } from 'react'
import clsx from 'clsx'

export function Logomark({
  invert = false,
  filled = false,
  ...props
}: React.ComponentPropsWithoutRef<'svg'> & {
  invert?: boolean
  filled?: boolean
}) {
  let id = useId()

  return (
    <svg viewBox="0 0 32 32" aria-hidden="true" {...props}>
      <rect
        clipPath={`url(#${id}-clip)`}
        className={clsx(
          'h-8 transition-all duration-300',
          invert ? 'fill-white' : 'fill-neutral-950',
          filled ? 'w-8' : 'w-0 group-hover/logo:w-8',
        )}
      />
      <use
        href={`#${id}-path`}
        className={invert ? 'stroke-white' : 'stroke-neutral-950'}
        fill="none"
        strokeWidth="1.5"
      />
      <defs>
        <g transform="translate(169)">
          <g transform="scale(0.5)">
            <path fillRule="evenodd" clipRule="evenodd" d="M115.227 115.227V84.5C115.227 67.5298 101.47 53.7727 84.5 53.7727C67.5298 53.7727 53.7727 67.5298 53.7727 84.5C53.7727 101.47 67.5298 115.227 84.5 115.227H115.227ZM169 84.5C169 37.8319 131.168 0 84.5 0C37.8319 0 0 37.8319 0 84.5C0 131.168 37.8319 169 84.5 169H169V84.5Z" fill="black"/>
          </g>
        </g>
        <clipPath id={`${id}-clip`}>
          <use href={`#${id}-path`} />
        </clipPath>
      </defs>
    </svg>
  );
  
}



export function Logo({
  className,
  invert = false,
  filled = false,
  fillOnHover = false,
  ...props
}: React.ComponentPropsWithoutRef<'svg'> & {
  invert?: boolean
  filled?: boolean
  fillOnHover?: boolean
}) {
  return (
    <svg width="153.5" height="33" viewBox="0 0 307 66" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path d="M17.984 64.944L0.823975 21.736H18.336L28.808 58.344H22.472L32.856 21.736H50.28L33.12 64.944H17.984Z" fill="black"/>
      <path d="M52.5343 64.944V21.736H68.9903V64.944H52.5343ZM60.7183 17.336C58.313 17.336 56.289 16.5147 54.6463 14.872C53.0623 13.1707 52.2703 11.1173 52.2703 8.712C52.2703 6.248 53.0623 4.19466 54.6463 2.552C56.289 0.850666 58.313 0 60.7183 0C63.241 0 65.2943 0.850666 66.8783 2.552C68.4623 4.19466 69.2543 6.248 69.2543 8.712C69.2543 11.1173 68.4623 13.1707 66.8783 14.872C65.2943 16.5147 63.241 17.336 60.7183 17.336Z" fill="black"/>
      <path d="M75.6962 64.944V21.736H92.2402V64.944H75.6962ZM92.2402 41.536L84.6722 34.936C86.6668 30.184 89.1015 26.664 91.9762 24.376C94.9095 22.0293 98.6348 20.856 103.152 20.856C105.147 20.856 106.878 21.12 108.344 21.648C109.811 22.1173 111.013 22.8507 111.952 23.848L102.624 36.872C102.155 36.344 101.509 35.9333 100.688 35.64C99.9255 35.288 98.9868 35.112 97.8722 35.112C96.0535 35.112 94.6455 35.6693 93.6482 36.784C92.7095 37.8987 92.2402 39.4827 92.2402 41.536Z" fill="black"/>
      <path d="M187.944 64.944V40.656C187.944 38.8373 187.416 37.4293 186.36 36.432C185.304 35.4347 183.984 34.936 182.4 34.936C181.285 34.936 180.288 35.1707 179.408 35.64C178.587 36.0507 177.941 36.696 177.472 37.576C177.003 38.456 176.768 39.4827 176.768 40.656L170.344 37.752C170.344 34.232 171.107 31.2107 172.632 28.688C174.216 26.1653 176.357 24.2293 179.056 22.88C181.755 21.5307 184.805 20.856 188.208 20.856C191.317 20.856 194.104 21.56 196.568 22.968C199.032 24.376 200.968 26.2827 202.376 28.688C203.784 31.0933 204.488 33.8213 204.488 36.872V64.944H187.944ZM160.224 64.944V21.736H176.768V64.944H160.224Z" fill="black"/>
      <path d="M231.58 65.824C227.356 65.824 223.631 64.856 220.404 62.92C217.236 60.984 214.743 58.344 212.924 55C211.164 51.5973 210.284 47.7253 210.284 43.384C210.284 38.984 211.164 35.0827 212.924 31.68C214.743 28.2773 217.236 25.6373 220.404 23.76C223.631 21.824 227.356 20.856 231.58 20.856C234.22 20.856 236.684 21.3253 238.972 22.264C241.319 23.144 243.284 24.4053 244.868 26.048C246.452 27.632 247.45 29.48 247.86 31.592V54.384C247.45 56.4373 246.452 58.344 244.868 60.104C243.284 61.864 241.319 63.272 238.972 64.328C236.684 65.3253 234.22 65.824 231.58 65.824ZM234.572 51.304C236.156 51.304 237.506 50.9813 238.62 50.336C239.735 49.632 240.615 48.6933 241.26 47.52C241.964 46.288 242.316 44.9093 242.316 43.384C242.316 41.8 241.994 40.4213 241.348 39.248C240.703 38.0747 239.794 37.1653 238.62 36.52C237.506 35.816 236.186 35.464 234.66 35.464C233.194 35.464 231.874 35.816 230.7 36.52C229.527 37.1653 228.588 38.104 227.884 39.336C227.239 40.5093 226.916 41.8587 226.916 43.384C226.916 44.8507 227.239 46.2 227.884 47.432C228.588 48.6053 229.527 49.544 230.7 50.248C231.874 50.952 233.164 51.304 234.572 51.304ZM257.892 64.944H241.788V53.328L244.076 42.856L241.348 32.384V0.616003H257.892V64.944Z" fill="black"/>
      <path fillRule="evenodd" clipRule="evenodd" d="M140 51.4438V43.4438C140 39.0256 136.418 35.4438 132 35.4438C127.582 35.4438 124 39.0256 124 43.4438C124 47.8621 127.582 51.4438 132 51.4438H140ZM154 43.4438C154 31.2936 144.15 21.4438 132 21.4438C119.85 21.4438 110 31.2936 110 43.4438C110 55.5941 119.85 65.4438 132 65.4438H154V43.4438Z" fill="black"/>
      <path fillRule="evenodd" clipRule="evenodd" d="M293 51.4438V43.4438C293 39.0256 289.418 35.4438 285 35.4438C280.582 35.4438 277 39.0256 277 43.4438C277 47.8621 280.582 51.4438 285 51.4438H293ZM307 43.4438C307 31.2936 297.15 21.4438 285 21.4438C272.85 21.4438 263 31.2936 263 43.4438C263 55.5941 272.85 65.4438 285 65.4438H307V43.4438Z" fill="black"/>
    </svg>
    
  )
}
